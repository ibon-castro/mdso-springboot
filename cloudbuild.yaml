steps:
  # Step 1: Grant execution permission to mvnw
  - name: 'gcr.io/cloud-builders/git'
    id: 'Set mvnw Permissions'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'chmod +x ./mvnw'

  # Step 2: Build the Spring Boot Application using Maven Wrapper
  - name: 'gcr.io/cloud-builders/mvn'
    id: 'Build Spring Boot Application'
    entrypoint: './mvnw'  # Use the wrapper instead of mvn
    args: ['clean', 'package', '-DskipTests=true']

  # Step 3: Run Snyk for Dependency Vulnerability Scanning
  - name: 'snyk/snyk-cli:npm'
    id: 'Snyk Security Scan'
    entrypoint: bash
    args:
      - '-c'
      - |-
        snyk auth 92247322-4cca-4a9b-8056-5a7d027df2b6
        snyk test --severity-threshold=high

  # Step 4: Store the generated JAR file in GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'Store Artifacts in Cloud Storage'
    args:
      - 'cp'
      - 'target/*.jar'
      - 'gs://bucket-mdso/springboot-artifacts/'

  # Step 5: Deploy the application to Google App Engine
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to App Engine'
    args:
      - 'gcloud'
      - 'app'
      - 'deploy'
      - '--quiet'
      - '--project=iboncas-proyecto'

# Logging configuration
options:
  logging: CLOUD_LOGGING_ONLY

# Timeout for Cloud Build process
timeout: 1200s
