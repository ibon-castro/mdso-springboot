steps:
  # Step 1: Build the Spring Boot Application
  - name: 'gcr.io/cloud-builders/mvn'
    id: 'Build Spring Boot Application'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-DskipTests=true']

  # Step 2: Run SonarCloud Analysis
  - name: 'sonarsource/sonar-scanner-cli:latest'
    id: 'SonarCloud Analysis'
    args:
      - '-Dsonar.host.url=https://sonarcloud.io'
      - '-Dsonar.login=6a658a1e40e6eee045c739d45a50160b4c500f91'
      - '-Dsonar.projectKey=ibon-castro_mdso-springboot'
      - '-Dsonar.organization=iboncas-sonar'
      - '-Dsonar.sources=.'
      - '-Dsonar.java.binaries=target/classes'
      
  # Step 3: Store the generated JAR file in GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'Store Artifacts in Cloud Storage'
    args:
      - 'cp'
      - 'target/*.jar'
      - 'gs://bucket-mdso/springboot-artifacts/'

  # Step 4: Deploy the application to Google App Engine
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to App Engine'
    args:
      - 'gcloud'
      - 'app'
      - 'deploy'
      - '--quiet'
      - '--project=iboncas-proyecto'

# Logging configuration (use Cloud Logging or Stackdriver)
options:
  logging: CLOUD_LOGGING_ONLY  # Log build results to Cloud Logging (Stackdriver)

# Timeout for Cloud Build process
timeout: 1200s
